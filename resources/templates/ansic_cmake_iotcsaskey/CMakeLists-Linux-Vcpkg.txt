#Copyright (c) Microsoft. All rights reserved.
#Licensed under the MIT license. See LICENSE file in the project root for full license information.

#this is CMakeLists.txt for {PROJECT_NAME}

#Compile As C99
if (CMAKE_VERSION VERSION_LESS "3.1")
    if (CMAKE_C_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "Clang")
        set (CMAKE_C_FLAGS "--std=c99 /DWIN32 /D_WINDOWS /W3")
        if (NOT IN_OPENWRT)
            set (CMAKE_CXX_FLAGS "--std=c++11 /DWIN32 /D_WINDOWS /W3 /GR /EHsc")
        endif()
    endif()
else()
    set (CMAKE_C_STANDARD 99)
    set (CMAKE_CXX_STANDARD 11)
endif()

cmake_minimum_required(VERSION 2.8)

# Uncomment the following line if you want to build with vcpkg of azure_iot_sdks
# find_package(azure_iot_sdks REQUIRED)

# Uncomment the following line if you want to build with the source code of azure_iot_sdks
# add_subdirectory(azure-iot-sdk-c)

set({PROJECT_NAME}_h_files
    {H_FILE_LIST}
)

set({PROJECT_NAME}_c_files
    {C_FILE_LIST}
    ./main.c
)

include_directories(.)

add_executable({PROJECT_NAME} ${{PROJECT_NAME}_c_files} ${{PROJECT_NAME}_h_files})

# Find azure_iot_sdks Vcpkg package
find_package(azure_iot_sdks REQUIRED)
find_package(ZLIB REQUIRED)
find_library(CURL NAMES curl-d curl)

target_link_libraries({PROJECT_NAME}
parson
iothub_client_mqtt_transport
iothub_client
digitaltwin_client
prov_device_ll_client
prov_mqtt_transport
prov_auth_client
aziotsharedutil
umqtt
uuid
${CURL}
pthread
ssl
crypto
m
ZLIB::ZLIB
)
